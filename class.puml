@startuml ReactAgent
class ReactAgent {
-maxStep
+generate([]*schema.Message) *schema.Message
}
class State {
}
ReactAgent --> State

State -->"0...*" Message

ReactAgent --> ChatModel
ReactAgent -->"0...*" Tool
class ChatModel {
+generate([]Message) Message
+stream([]Message) <- Message
+bindTools([]ToolInfo)
}
ChatModel --> ChatModelClient
interface ChatModelClient {
+generate([]Message) Message
+stream([]Message) <- Message
}
class QWenChatModel {
-baseUrl
-apiKey
}
QWenChatModel --u|> ChatModelClient
interface Tool {
+Info() ToolInfo
+Execute(map[string]interface{}) interface{}
}
class Calculator {
}
Calculator --u|> Tool

class ToolInfo {
-name
-desc
-parameters map[string]*ParameterInfo
}
Tool ..> ToolInfo
class ParameterInfo {
-name
-type
-desc
-required
-elemInfo *ParameterInfo
-subInfo map[string]*ParameterInfo
}
ToolInfo ..> ParameterInfo

ParameterInfo --> DataType
enum DataType {
+Integer
+String
+Number
+Boolean
+Object
+Array
}

class Message {
-content
}

enum Role {
+User
+String
+Assistant
+Tool
}
Message --> Role
@enduml